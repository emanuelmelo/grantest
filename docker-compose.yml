version: '3.5'
services:
    webapp-service:
        container_name: gran_front
        build:
          context: .
          dockerfile: frontend/Dockerfile
        volumes:
          - './frontend:/app'
          - '/app/node_modules'
        ports:
          - '4560:3000'
        networks:
          - gran_network
    
    database-service:
        container_name: gran_database
        image: postgres
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: gran
            POSTGRES_PASSWORD: example
        ports:
            - 15432:5432
        volumes:
            - ./backend/database/docker-data/postgres:/var/lib/postgresql/data
            - ./backend/database:/docker-entrypoint-initdb.d
        networks:
            - gran_network

    # api-service:
    #     container_name: gran_api
    #     image: bitnami/laravel
    #     build: ./backend
    #     restart: on-failure
    #     environment:
    #         - APP_ENV=local
    #     working_dir: /application
    #     volumes:
    #         - ./backend:/application
    #     depends_on:
    #         - database-service
    #     links:
    #         - database-service
    #     networks:
    #         - gran_network

    # webserver-service:
    #     container_name: gran_webserver
    #     build:
    #         context: ./backend
    #         dockerfile: WebserverDockerfile
    #     image: nginx:alpine
    #     restart: unless-stopped
    #     ports:
    #         - 8000:80
    #     working_dir: /application
    #     volumes:
    #         - ./application
    #         - ./backend/docker/webserver/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    #     depends_on:
    #         - api-service
    #     networks:
    #         - gran_network

networks:
    gran_network:
      driver: bridge
